name: build-vsix

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

env:
  RELEASE_VERSION: 0.0.1

jobs:
  build-vsix:
    # if: (startsWith(github.head_ref, 'release-') && github.event.pull_request.merged == true)
    if: (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.HABITAT_AWS_ACCESS_KEY }}
          aws-region: ${{ secrets.HABITAT_AWS_REGION }}
          aws-secret-access-key: ${{ secrets.HABITAT_AWS_SECRET_ACCESS_KEY }}

      - name: Fetch repository
        uses: actions/checkout@v3
       
      - name: Set up node 
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Install VSCE
        run: |
          npm install -g @vscode/vsce

      - name: Build VSIX
        run: |
          scripts/build_vsix.sh

      - name: Set RELEASE_VERSION
        run: |
          RELEASE_VERSION=$(node -p "require('./skyline-vscode/package.json').version")
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Upload vsix artifact
        uses: actions/upload-artifact@v3
        with:
          name: deepview-explore-${{ env.RELEASE_VERSION }}.vsix
          path: skyline-vscode/deepview-explore-${{ env.RELEASE_VERSION }}.vsix

      - name: Upload vsix artifact to S3
        run: |
          aws s3 cp skyline-vscode/deepview-explore-${{ env.RELEASE_VERSION }}.vsix s3://centml-releases/deepview-explore/

  update-index:
    name: Update index.html in S3 bucket
    needs: build-vsix
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.HABITAT_AWS_ACCESS_KEY }}
          aws-region: ${{ secrets.HABITAT_AWS_REGION }}
          aws-secret-access-key: ${{ secrets.HABITAT_AWS_SECRET_ACCESS_KEY }}

      - name: Fetch repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      
      - name: Install dominate
        run: |
          pip3 install dominate

      - name: Download all versions of Deepview-explore from S3
        run : |
          mkdir vsix 
          cd vsix 
          aws s3 cp s3://centml-releases/deepview-explore/ . --recursive --exclude "*" --include "*.vsix"

      - name: Create index.html
        run: |
          file_list=(deepview-explore-*.vsix)
          formatted_file_list=$(basename -a ${file_list[@]})
          cd vsix
          python3 ../scripts/create_index.py deepview-explore -f $formatted_file_list
        
      - name: Upload index.html to S3
        run: |
          aws s3 cp vsix/index.html s3://centml-releases/deepview-explore/

  publish-release:
    name: Publish Release
    needs: build-vsix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set RELEASE_VERSION
        run: |
          RELEASE_VERSION=$(node -p "require('./skyline-vscode/package.json').version")
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
    
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: deepview-explore-${{ env.RELEASE_VERSION }}.vsix
          path: dist

      - name: Publish a release
        run: |
          RELEASE_NOTES="$(git log $(git describe --abbrev=0 --tags --always).. --merges --pretty=format:"%s %b" | cut -f 4,7- -d ' ')"
          echo "Autogenerated Release Notes:"
          echo "$RELEASE_NOTES"
          RELEASE_ARTIFACTS=$(find ./dist -name "*${{ env.RELEASE_VERSION }}*" -type f | paste -s -d ' ' - )
          VERSION_TAG="v${{ env.RELEASE_VERSION }}"
          gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"
          gh release create "$VERSION_TAG" \
                                  --title "$VERSION_TAG" \
                                  --notes "$RELEASE_NOTES" \
                                  --target "$GITHUB_SHA" \
                                  $RELEASE_ARTIFACTS
