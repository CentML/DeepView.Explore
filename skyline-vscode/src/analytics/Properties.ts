import { env, UIKind, version
 } from "vscode";
// TODO how to handle this for web version of extension?
import * as os from "os";

export interface UserProperties {
    // The extension version
    extversion: string,

    // A common machine identifier generated by VS Code
    machineId: string,

    // A session identifier generated by VS Code
    sessionId: string,

    // The version of VS Code running the extension
    vscodeVersion: string,
    
    // What Vs code is hosted in, i.e. desktop, github.dev, codespaces.
    product: string,

    // Web or Desktop indicating where VS Code is running    
    uiKind: UIKind,

    // A name to identify the type of remote connection. other indicates a remote connection not from the 3 main extensions (ssh, docker, wsl).
    remotename: string | undefined,
    
    // The OS running VS Code. On the web, it will just say web.
    os: string,
    
    // The version of the OS/Platform. On the web, it will just say web.
    platform: string,
    
    // What architecture of node is running. i.e. arm or x86. On the web it will just say web.
    arch: string
}

export function getUserProperties(): UserProperties {
    let userProperties: UserProperties = {
        extversion: require('root-require')('package.json').version,
        machineId: env.machineId,
        sessionId: env.sessionId,
        vscodeVersion: version,
        product: env.appHost,
        uiKind: env.uiKind,
        remotename: env.remoteName,
        os: os.release(),
        platform: os.platform(),
        arch: os.arch()
    };
    return userProperties;
}